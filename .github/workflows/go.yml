---
name: Go
on:
  pull_request:
    branches: [master]
jobs:

  build:
    name: ${{ matrix.name }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name:
          - macos-clang
          - ubuntu-clang
          - ubuntu-gcc
          - windows-gcc
        include:
          - name: macos-clang
            os: macos-latest
            cc: clang
          - name: ubuntu-clang
            os: ubuntu-latest
            cc: clang
          - name: ubuntu-gcc
            os: ubuntu-latest
            cc: gcc
          - name: windows-gcc
            os: windows-latest
            cc: gcc

    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      # Go binary

      - name: Run unit tests
        run: go test ./... -race -coverprofile=coverage.txt -covermode=atomic

      - name: Build the Go binary
        run: make r2pm

      - name: Initialize the database
        run: ./r2pm --debug init

      - name: Make sure r2dec is present in the database
        run: ./r2pm --debug search dec | grep -q 'converts asm to pseudo-C code'

      - name: Install from a package file
        run: ./r2pm --debug install -f test/test.yaml

      - name: Check that the package above was correctly installed
        run: ./r2pm --debug list installed | grep -q test

      - name: Delete the local database
        run: ./r2pm --debug delete

      # C binary

      - name: Build the C binary
        run: make r2pm_c
        env: {CC: "${{matrix.cc}}"}

      - name: Initialize the database
        run: ./r2pm_c init
        env:
          LD_LIBRARY_PATH: .  # for Linux
          R2PM_DEBUG: 1

      - name: Check that r2dec is available
        run: ./r2pm_c list-available | grep -q r2dec
        env:
          LD_LIBRARY_PATH: .  # for Linux
          R2PM_DEBUG: 1

      - name: Delete the local database
        run: ./r2pm_c delete
        env:
          LD_LIBRARY_PATH: .  # for Linux
          R2PM_DEBUG: 1

      - name: Run integration tests
        run: make integration-tests
        env: {R2_VERSION: 4.0.0}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
